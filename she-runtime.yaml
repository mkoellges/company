apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: she-runtime
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://she-informationstechnologie.github.io/charts/
    chart: she-runtime
    targetRevision: 1.4.2
    helm:
      values: |
        certManager:
          namespace: cert-manager
          name: cert-manager
          enabled: true
          source:
            repoURL: https://charts.jetstack.io
            targetRevision: v1.14.1
            chart: cert-manager
            helm:
              releaseName: cert-manager
              parameters:
                - name: installCRDs
                  value: 'true'

        # argo:
        #   targetCluster: in-cluster
        #   project: default

        argoApp:
          enabled: false
          source:
            helm:
              values: |
                server:
                  extraArgs: [--insecure]
                  ingress:
                    hostname: "argocd.customer.she-test.com"
                    tls: true

        prometheusOperator:
          prometheusNodeExporter:
            hostNetwork: true
          prometheus:
            prometheusSpec:
              externalLabels:
                k8s_cluster: dev-1
              storageSpec:
                volumeClaimTemplate:
                  spec:
                    storageClassName: standard
                    accessModes: ["ReadWriteOnce"]
                    resources:
                      requests:
                        storage: 5Gi
          alertmanager:
            alertmanagerSpec:
              storage:
                volumeClaimTemplate:
                  spec:
                    storageClassName: standard
                    accessModes: ["ReadWriteOnce"]
                    resources:
                      requests:
                        storage: 1Gi
          coreDns:
            enabled: false
            serviceMonitor:
              enabled: false
          kubeDns:
            enabled: false
            serviceMonitor:
              enabled: false
          kubeEtcd:
            enabled: false
            serviceMonitor:
              enabled: false
          kubeProxy:
            enabled: false
            serviceMonitor:
              enabled: false
          kubeScheduler:
            enabled: false
            serviceMonitor:
              enabled: false
          kubeControllerManager:
            enable: false
            serviceMonitor:
              enabled: false
          defaultRules:
            rules:
              etcd: false
              kubeControllerManager: false
              kubeProxy: false
              kubeSchedulerAlerting: false
          ingress:
            baseUrl: she-test.com

        publicIngressController:
          enabled: false

        internalIngressController:
          enabled: true

        postgresOperator:
          enabled: true
          source:
            repoURL: https://github.com/SHE-Informationstechnologie/postgres-operator-examples.git
            path: kustomize/install
            targetRevision: v5.5.2-she-1

        velero:
          source:
            helm:
              values: |
                initContainers:
                  - name: velero-plugin-for-aws
                    image: velero/velero-plugin-for-aws:v1.9.0
                    imagePullPolicy: IfNotPresent
                    volumeMounts:
                      - mountPath: /target
                        name: plugins
                nodeAgent:
                  tolerations:
                    - effect: NoSchedule
                      key: dedicated
                      operator: Exists
                metrics:
                  serviceMonitor:
                    enabled: true
                    namespace: monitoring
                    additionalLabels:
                      kubernetes.she.net/prometheus-instance: default

        kyverno:
          enabled: false
          source:
            helm:
              values: |
                admissionController:
                  tolerations:
                    - key: node-role.kubernetes.io/control-plane
                      operator: Exists
                  nodeSelector:
                    node-role.kubernetes.io/control-plane: ""

        kyvernoPolicies:
          enabled: false

        sealedSecrets:
          source:
            helm:
              values: |
                commandArgs:
                  - --key-renew-period=0

        metrics:
          namespace: kube-system
          name: metrics
          enabled: true
          source:
            repoURL: https://kubernetes-sigs.github.io/metrics-server
            chart: metrics-server
            helm:
              values: |
                defaultArgs:
                  - --cert-dir=/tmp
                  - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
                  - --kubelet-use-node-status-port
                  - --metric-resolution=15s
                  - --kubelet-insecure-tls

        monitoringRules:
          enabled: true
          namespace: monitoring
          name: monitoring-rules
          source:
            repoURL: https://she-informationstechnologie.github.io/charts/
            chart: monitoring-rules
            targetRevision: 3.0.2
            helm:
              values: |
                prometheusLabels:
                  kubernetes.she.net/prometheus-instance: default
                postgres:
                  enabled: true
                  podMonitor: false
                minio:
                  enabled: true
                  serviceMonitor:
                    selector:
                      matchLabels:
                        app.kubernetes.io/name: minio
                minioMirror:
                  enabled: true

        opensearchOperator:
          enabled: true

        x509Exporter:
          enabled: true

  syncPolicy:
    automated:
      selfHeal: true
      prune: true
    syncOptions:
      - CreateNamespace=true
  destination:
    server: https://kubernetes.default.svc
    namespace: argocd