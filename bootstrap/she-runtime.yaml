apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: she-runtime
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://github.com/SHE-Informationstechnologie/charts.git
    targetRevision: fix/version-1-4-3
    path: charts/she-runtime
    helm:
      values: |
        certManager:
          namespace: cert-manager
          name: cert-manager
          enabled: true
          source:
            repoURL: https://charts.jetstack.io
            targetRevision: v1.14.4
            chart: cert-manager
            helm:
              releaseName: cert-manager
              parameters:
                - name: installCRDs
                  value: 'true'

        argoApp:
          enabled: false

        prometheusOperator:
          commonLabels: 
            kubernetes.she.net/prometheus-instance: default
          prometheusOperator: 
            hostNetwork: false
          prometheusNodeExporter:
            hostNetwork: true
            service:
              port: 30001
              targetPort: 30001
          alertmanager:
            enabled: true
            ingress:
              enabled: true
              hosts:
                - alertmanager.example.com
              annotations: {}
            alertmanagerSpec:
              storage: {}
          grafana:
            enabled: true
            ingress:
              enabled: true
              hosts:
                - grafana.example.com
              grafana.ini:
                log:
                  mode: console
                server:
                  domain: grafana.example.com
                  root_url: https://grafana.ops.clickdocsdev.net
                auth:
                  login_cookie_name: grafana_session
                auth.basic:
                  enabled: true
                auth.anonymous:
                  enabled: true
                analytics:
                  check_for_updates: false
                  reporting_enabled: false
                security:
                  cookie_secure: true
                  disable_gravatar: true
                  login_remember_days: 3
                  allow_embedding: true
                users:
                  default_theme: dark
                  auto_assign_org: true
                  auto_assign_org_role: Editor
                dataproxy:
                  timeout: 180
                  keep_alive_seconds: 180
                  idle_conn_timeout_seconds: 300
                date_formats:
                  use_browser_locale: true

          prometheus:
            enabled: true
            crunchyPostgresExporter:
              enabled: true
            ingress:
              enabled: true
              hosts: 
                - prometheus.example.com
              annotations: {}
            prometheusSpec:
              externalLabels:
                  cluster: dev-1
              storageSpec:
                volumeClaimTemplate:
                  spec:
                    storageClassName: standard
                    accessModes: ["ReadWriteOnce"]
                    resources:
                      requests:
                        storage: 50Gi
          coreDns:
            enabled: false
            serviceMonitor:
              enabled: false
          kubeDns:
            enabled: false
            serviceMonitor:
              enabled: false
          kubeEtcd:
            enabled: false
            serviceMonitor:
              enabled: false
          kubeProxy:
            enabled: false
            serviceMonitor:
              enabled: false
          kubeScheduler:
            enabled: false
            serviceMonitor:
              enabled: false
          kubeControllerManager:
            enable: false
            serviceMonitor:
              enabled: false
          defaultRules:
            rules:
              etcd: false
              kubeControllerManager: false
              kubeProxy: false
              kubeSchedulerAlerting: false

        publicIngressController:
          enabled: false

        internalIngressController:
          namespace: internal-ingress
          name: internal-ingress
          enabled: true
          source:
            repoURL: https://kubernetes.github.io/ingress-nginx
            targetRevision: 4.10.0
            chart: ingress-nginx
            helm:
              parameters:
                - name: controller.ingressClass
                  value: nginx-internal
                - name: controller.watchIngressWithoutClass
                  value: 'true'
                - name: controller.ingressClassResource.name
                  value: nginx-internal
                - name: controller.ingressClassResource.default
                  value: 'true'

        postgresOperator:
          enabled: true

        velero:
          source:
            helm:
              values: |
                initContainers:
                  - name: velero-plugin-for-aws
                    image: velero/velero-plugin-for-aws:v1.8.1
                    imagePullPolicy: IfNotPresent
                    volumeMounts:
                    - mountPath: /target
                      name: plugins
                metrics:
                  serviceMonitor:
                    enabled: true
                    namespace: monitoring
                    additionalLabels:
                      kubernetes.she.net/prometheus-instance: default

        monitoringRules:
          enabled: true
          namespace: monitoring
          name: monitoring-rules
          source:
            repoURL: https://she-informationstechnologie.github.io/charts/
            chart: monitoring-rules
            targetRevision: 3.0.2
            helm:
              values: |
                prometheusLabels:
                  kubernetes.she.net/prometheus-instance: default
                postgres:
                  enabled: true
                  podMonitor: false
                minio:
                  enabled: true
                  serviceMonitor:
                    selector:
                      matchLabels:
                        app.kubernetes.io/name: minio
                minioMirror:
                  enabled: true

        opensearchOperator:
          enabled: true

        taintController:
          enabled: false

        x509Exporter:
          enabled: true

  syncPolicy:
    automated:
      selfHeal: true
      prune: true
    syncOptions:
      - CreateNamespace=true
  destination:
    server: https://kubernetes.default.svc
    namespace: argocd
